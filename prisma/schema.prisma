// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @db.VarChar(255)

  phone     String?  @db.VarChar(255)
  phone2    String?  @db.VarChar(255)
  mobile    String?  @db.VarChar(255)
  realname  String?  @db.VarChar(255)
  firstname String?  @db.VarChar(255)
  picture   String?  @db.VarChar(1024)
  nickname  String?  @db.VarChar(255)

  // GLPI integration
  glpiId     String?   @unique @map("glpi_id") @db.VarChar(255)
  dateSync   DateTime? @map("date_sync")   // last GLPI->local sync timestamp

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now()) @map("created_at")
  createdBy String?  @map("created_by") @db.VarChar(255)
  updatedAt DateTime @updatedAt @map("updated_at")
  updatedBy String?  @map("updated_by") @db.VarChar(255)

  @@map("users")
}

model Ticket {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String   @db.VarChar(255)
  isActive  Boolean  @default(true)
  createdAt   DateTime @default(now()) @map("created_at")
  createdBy   String?  @map("created_by") @db.VarChar(255)
  updatedAt   DateTime @updatedAt @map("updated_at")
  updatedBy   String?  @map("updated_by") @db.VarChar(255)

  @@map("tickets")
}
 